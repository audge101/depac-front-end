[{"/home/audrey/DEPAC/depac-front-end/src/reportWebVitals.js":"1","/home/audrey/DEPAC/depac-front-end/src/LoginContainer/index.js":"2","/home/audrey/DEPAC/depac-front-end/src/NewPlant/index.js":"3","/home/audrey/DEPAC/depac-front-end/src/DepacContainer/index.js":"4","/home/audrey/DEPAC/depac-front-end/src/index.js":"5","/home/audrey/DEPAC/depac-front-end/src/App.js":"6","/home/audrey/DEPAC/depac-front-end/src/PlantToShow/index.js":"7","/home/audrey/DEPAC/depac-front-end/src/ShowUserPlants/index.js":"8","/home/audrey/DEPAC/depac-front-end/src/ShowFavPlants/index.js":"9","/home/audrey/DEPAC/depac-front-end/src/EditPlant/index.js":"10","/home/audrey/DEPAC/depac-front-end/src/ShowAllPlants/index.js":"11","/home/audrey/DEPAC/depac-front-end/src/UserNavBar/index.js":"12"},{"size":362,"mtime":1606505049531,"results":"13","hashOfConfig":"14"},{"size":3773,"mtime":1607579240345,"results":"15","hashOfConfig":"14"},{"size":9130,"mtime":1607574663337,"results":"16","hashOfConfig":"14"},{"size":14330,"mtime":1607603442161,"results":"17","hashOfConfig":"14"},{"size":565,"mtime":1607571258420,"results":"18","hashOfConfig":"14"},{"size":235,"mtime":1607437023963,"results":"19","hashOfConfig":"14"},{"size":5324,"mtime":1607576200473,"results":"20","hashOfConfig":"14"},{"size":1233,"mtime":1607575036199,"results":"21","hashOfConfig":"14"},{"size":1080,"mtime":1607574961444,"results":"22","hashOfConfig":"14"},{"size":8968,"mtime":1607573554847,"results":"23","hashOfConfig":"14"},{"size":2393,"mtime":1607574862053,"results":"24","hashOfConfig":"14"},{"size":4806,"mtime":1607575282604,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"acrbl1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/audrey/DEPAC/depac-front-end/src/reportWebVitals.js",[],["53","54"],"/home/audrey/DEPAC/depac-front-end/src/LoginContainer/index.js",[],"/home/audrey/DEPAC/depac-front-end/src/NewPlant/index.js",[],["55","56"],"/home/audrey/DEPAC/depac-front-end/src/DepacContainer/index.js",["57","58"],"import React, { Component } from 'react'\nimport LoginContainer from '../LoginContainer'\nimport ShowAllPlants from '../ShowAllPlants'\nimport ShowUserPlants from '../ShowUserPlants'\nimport PlantToShow from '../PlantToShow'\nimport NewPlant from '../NewPlant'\nimport EditPlant from '../EditPlant'\nimport ShowFavPlants from '../ShowFavPlants'\nimport SearchList from '../SearchList'\nimport UserNavBar from '../UserNavBar'\nimport M from  'materialize-css/dist/js/materialize.min.js'\n\nexport default class DepacContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplants: [],\n\t\t\tlikes: [],\n\t\t\tfavorites: [],\n\t\t\taccountPlants: [],\n\t\t\taccountFavPlants: [],\n\t\t\tinputValue: '',\n\t\t\tidOfPlantToShow: -1,\n\t\t\tidOfPlantToEdit: -1,\n\t\t\tloggedIn: false,\n\t\t\tloggedInUser: null,\n\t\t\tprofileImg: '',\n\t\t\tconditionalView: '',\n\t\t\t\n\t\t}\n\t}\n\n\n\tgetPlants = async() => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/'\n\t\t\tconst plantsResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst plantsJson = await plantsResponse.json()\n\t\t\tthis.setState({\n\t\t\t\tplants: plantsJson.data.plants,\n\t\t\t\tlikes: plantsJson.data.likes,\n\t\t\t\tfavorites: plantsJson.data.favorites\n\t\t\t})\n\n\t\t\tconsole.log(this.state.likes)\n\t\t\tconsole.log(this.state.favorites)\n\t\t\tconsole.log(plantsJson)\n\t\t}catch(err) {\n\t\t\tconsole.log(\"Error getting posts data\", err)\n\t\t}\n\t}\n\n\n\tgetContributorPlants = async() => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/userposts/'\n\t\t\tconst accountPlantsResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include'\n\t\t\t})\n\t\t\tconst contributorPlantsJson = await accountPlantsResponse.json()\n\t\t\tthis.setState({\n\t\t\t\taccountPlants: contributorPlantsJson.data\n\t\t\t})\n\t\t\tthis.showUserPlants()\n\t\t}catch(err){\n\t\t\tconsole.log(\"Error getting account posts data\", err)\n\t\t}\t\n\t}\n\n\n\n\tgetFavPlants = async() => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/userfavorites/'\n\t\t\tconst accountFavoritesResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include'\n\t\t\t})\n\t\t\tconst favoritesPlantsJson = await accountFavoritesResponse.json()\n\t\t\tthis.setState({\n\t\t\t\taccountFavPlants: favoritesPlantsJson.data\n\t\t\t})\n\t\t\tthis.showFavPlants()\n\t\t}catch(err){\n\t\t\tconsole.log(\"Error getting account posts data\", err)\n\t\t}\t\n\t}\n\n\n\tcreatePlant = async(plantToAdd) => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/'\n\t\t\tconst createPlantResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(plantToAdd)\n\t\t\t})\n\t\t\tconst createPlantJson = await createPlantResponse.json()\n\t\t\tconsole.log(\"This is createplantjson: \", createPlantJson)\n\t\t\tif(createPlantResponse.status === 201 || createPlantResponse.status === 200){\n\t\t\t\tthis.setState({\n\t\t\t\t\tplants: [...this.state.plants, createPlantJson.data],\n\t\t\t\t\tconditionalView: ''\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.getPlants()\n\t\t}catch(err) {\n\t\t\tconsole.log(\"Error adding plant: \", err)\n\t\t}\n\t}\n\n\n\n\tdeletePlant = async(id) => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/' + id\n\t\t\tconst deletePlantResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'DELETE'\n\t\t\t})\n\t\t\tconst deletePlantJson = await deletePlantResponse.json()\n\t\t\tconsole.log(\"Here is the deletePlantJson: \", deletePlantJson)\n\t\t\tif(deletePlantJson.status === 200 || deletePlantJson.status === 201) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tplants: this.state.plants.filter(plant => plant.id !== id),\n\t\t\t\t})\n\t\t\t}\n\t\t}catch(err) {\n\t\t\tconsole.log(\"There was an error deleting plant with id: \", id)\n\t\t}\n\t\tthis.getContributorPlants()\n\t}\n\n\n\n\teditPlant = (idOfPlantToEdit) => {\n\t\tthis.setState({\n\t\t\tidOfPlantToEdit: idOfPlantToEdit,\n\t\t\tconditionalView: 'editPlant'\n\t\t})\n\t}\n\n\n\tupdatePlant = async(updatedPlant) => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/' + this.state.idOfPlantToEdit\n\t\t\tconst updatePlantResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'PUT',\n\t\t\t\tbody: JSON.stringify(updatedPlant),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst updatePlantJson = await updatePlantResponse.json()\n\t\t\tconsole.log(\"this is your updatePlantJson: \", updatePlantJson)\n\t\t\tthis.setState({\n\t\t\t\tidOfPlantToEdit: -1\n\t\t\t})\n\t\t}catch(err) {\n\t\t\tconsole.log(\"error trying to edit plant with id: \", updatedPlant)\n\t\t}\n\t\tthis.getPlants()\n\t\tthis.getContributorPlants()\n\t}\n\n\topenPlantForm = async() => {\n\t\tthis.setState({\n\t\tconditionalView: 'openPlantForm'\n\t\t})\n\t}\n\n\tviewPlants = async() => {\n\t\tthis.setState({\n\t\tconditionalView: ''\n\t\t})\n\t}\n\n\n\n\tshowUserPlants = async() => {\n\t\tthis.setState({\n\t\tconditionalView: 'accountPlants'\n\t\t})\n\t}\n\n\tshowFavPlants = async() => {\n\t\tthis.setState({\n\t\t\tconditionalView: 'favoritePlants'\n\t\t})\n\t}\n\n\tlogin = async(loginInfo) => {\n\t\tconst url = process.env.REACT_APP_API_URL + '/directory/users/login/'\n\t\ttry{\n\t\t\tconst loginResponse = await fetch(url, {\n\t\t\t\tcredentials: 'include',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(loginInfo),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst loginJson = await loginResponse.json()\n\t\t\tif(loginResponse.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloggedIn: true,\n\t\t\t\t\tloggedInUser: loginJson.data.username,\n\t\t\t\t\tprofileImg: loginJson.data.profile_img\n\t\t\t\t})\n\t\t\t\tconsole.log(loginJson.data)\n\n\t\t\t}\n\t\t}catch(error) {\n\t\t\tconsole.log(\"Error trying to log you in: \", error)\n\t\t}\n\t}\n\n\n\tregister = async(registerUser) => {\n\t\tconst url = process.env.REACT_APP_API_URL + '/directory/users/register/'\n\t\ttry{\n\t\t\tconst registerUserResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(registerUser)\n\t\t\t})\n\t\t    const registerJson = await registerUserResponse.json()\n\t\t    console.log(\"registerJson\", registerJson);\n\t\t     // hungry for more?\n\t\t     // when user tries to register a duplicate username\n\t\t     // display the \"already registered\" message from the server\n\t\t     // on the screen in the form in red or something\n\t\t     // and highlight the appropriate field\n\n\t\t     if(registerUserResponse.status === 201) {\n\t\t       this.setState({\n\t\t         loggedIn: true,\n\t\t         loggedInUser: registerJson.data.username\n\t\t       })\n\t\t     }\n\t\t  } catch(err) {\n\t\t    console.error(\"Error trying to register with API\")\n\t\t    console.error(err)\n\t\t  }\n\t\t}\n\n\n\tlogout = async() => {\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/users/logout/'\n\t\t\tconst logoutResponse = await fetch(url, {\n\t\t\t\tmethod: 'GET',\n      \t\t\tcredentials: 'include'\n    \t\t})\n\t\t\tconst logoutJson = await logoutResponse.json()\n\t\t\tconsole.log(\"logoutJson\", logoutJson);\n    \t\tif(logoutResponse.status === 200) {\n      \t\tthis.setState({\n        \t\tloggedIn: false,\n        \t\tloggedInUser: '',\n        \t\tconditionalView: ''\n\t\t\t    })\n\t\t\t}\n\n\t\t} catch(error) {\n\t\t\tconsole.error(\"Error logging out\")\n\t\t\tconsole.error(error)\n\t\t\t}\n\t\t}\n\n\n\tcomponentDidMount(){\n\t\tthis.getPlants()\n\t}\n\n/*\n\tshowAllPlants = () => {\n\t\tthis.setState({\n\t\t\tconditionalView: ''\n\t\t})\n\t}\n*/\n\tshowOnePlant = (idOfPlantToShow) => {\n\t\tconsole.log(\"Trying to show plant with id: \", idOfPlantToShow)\n\t\tthis.setState({\n\t\t\tidOfPlantToShow: idOfPlantToShow,\n\t\t\tconditionalView: \"showThisPlant\"\n\t\t})\n\t}\n\n\n\taddLike = async(id) => {\n\t\tconsole.log(id)\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/like/' + id\n\t\t\tconst likePlantResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t})\n\t\t\tconst likePlantJson = await likePlantResponse.json()\n\t\t\tconsole.log(\"Here is the likePlantJson: \", likePlantJson)\n\t\t\tif(likePlantJson.status === 200 || likePlantJson.status === 201) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tlikes: [...this.state.likes, likePlantJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.getPlants()\n\t\t}catch(err) {\n\t\t\tconsole.log(\"There was an error liking this plant: \", err)\n\t\t}\n\t}\n\n\n\tdeleteLike = async (id) => {\n        console.log(id)\n        try {\n            const loggedInUser = this.state.loggedInUser\n            const url = process.env.REACT_APP_API_URL + \"/directory/plants/delete/\" + id\n            const deleteLikePlantResponse = await fetch(url, {\n                method: \"DELETE\",\n                credentials: \"include\",\n            })\n            const deleteLikePlantJson = await deleteLikePlantResponse.json()\n            console.log(\"Here is the deleteLikePlantJson: \", deleteLikePlantJson)\n            if(deleteLikePlantJson.status === 200 || deleteLikePlantJson.status === 201) {\n                this.setState({\n                    likes: this.state.likes.filter(like => like.username.user !== loggedInUser)\n                })\n            }\n            this.getPlants()\n        } catch(err) {\n            console.log(\"There was an error deleting this like\", err)\n        }\n    }\n\n\n\taddFav = async(id) => {\n\t\tconsole.log(id)\n\t\ttry{\n\t\t\tconst url = process.env.REACT_APP_API_URL + '/directory/plants/favorite/' + id\n\t\t\tconst favPlantResponse = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tcredentials: 'include',\n\t\t\t})\n\t\t\tconst favPlantJson = await favPlantResponse.json()\n\t\t\tconsole.log(\"Here is the favPlantJson: \", favPlantJson)\n\t\t\tif(favPlantJson.status === 200 || favPlantJson.status === 201) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tfavorites: [...this.state.favorites, favPlantJson.data]\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.getPlants()\n\t\t}catch(err) {\n\t\t\tconsole.log(\"There was an error favoriting this plant: \", err)\n\t\t}\n\t}\n\n\tdeleteFav = async (id) => {\n        console.log(id)\n        try {\n            const loggedInUser = this.state.loggedInUser\n            const url = process.env.REACT_APP_API_URL + \"/directory/plants/deletefav/\" + id\n            const deleteFavPlantResponse = await fetch(url, {\n                method: \"DELETE\",\n                credentials: \"include\",\n            })\n            const deleteFavPlantJson = await deleteFavPlantResponse.json()\n            console.log(\"Here is the deleteFavPlantJson: \", deleteFavPlantJson)\n            if(deleteFavPlantJson.status === 200 || deleteFavPlantJson.status === 201) {\n                this.setState({\n                    favorites: this.state.favorites.filter(favorite => favorite.username.user !== loggedInUser)\n                })\n            }\n            this.getPlants()\n        } catch(err) {\n            console.log(\"There was an error deleting this like\", err)\n        }\n    }\n/*\n\n\tcloseShowPlant = () => {\n\t\tthis.setState({\n\t\t\tidOfPlantToShow: -1,\n\t\t\tconditionalView: ''\n\t\t})\n\t}\n*/\n\n\n\n\tcloseEditPlant = () => {\n\t\tthis.setState({\n\t\t\tidOfPlantToEdit: -1\n\t\t})\n\t}\n\n\n\trender(){\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<UserNavBar\n\t\t\t\t\tloggedIn={this.state.loggedIn}\n\t\t\t\t\tloggedInUser={this.state.loggedInUser}\n\t\t\t\t\tcreatePlant={this.createPlant} \n\t\t\t\t\tprofileImg={this.state.profileImg}\n\t\t\t\t\tlogout={this.logout}\n\t\t\t\t\topenPlantForm={this.openPlantForm}\n\t\t\t\t\tviewPlants={this.viewPlants}\n\t\t\t\t\tgetContributorPlants={this.getContributorPlants}\n\t\t\t\t\tgetFavPlants={this.getFavPlants}\n\t\t\t\t\tinputValue={this.state.inputValue}\n\t\t\t\t\tplantFilterOnChange={this.plantFilterOnChange} />\n\n\n\t\t\t\t<h2 className=\"center dirName\">the directory of extraordinary plants and cacti</h2>\n\t\t\t\t<div className=\"indexContainer\">\n\t\t\t\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.conditionalView === 'openPlantForm' &&\n\t\t\t\t\t\t<React.Fragment>\n\n\t\t\t    \t\t\t<NewPlant\n\t\t\t\t\t\t\t\tloggedInUser={this.state.loggedInUser}\n\t\t\t\t\t\t\t\tcreatePlant={this.createPlant} \n\t\t\t\t\t\t\t\tviewPlants={this.viewPlants}/>\n\t\t    \t\t\t</React.Fragment>\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.conditionalView === '' && this.state.loggedIn === true &&\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<h4>View All Contributions</h4>\n\t\t\t\t\t\t<h5 className=\"center\">Click Anywhere on a Post to View More</h5> \n\t\t\t\t\t\t\t<ShowAllPlants\n\t\t\t\t\t\t\t\tplants={this.state.plants}\n\t\t\t\t\t\t\t\tloggedInUser={this.state.loggedInUser} \n\t\t\t\t\t\t\t\tlikes={this.state.likes} \n\t\t\t\t\t\t\t\taddLike={this.addLike}\n\t\t\t\t\t\t\t\tdeleteLike={this.deleteLike}\n\t\t\t\t\t\t\t\tshowOnePlant={this.showOnePlant}\n\t\t\t\t\t\t\t\tfavorites={this.state.favorites}\n\t\t\t\t\t\t\t\taddFav={this.addFav}\n\t\t\t\t\t\t\t\tdeleteFav={this.deleteFav}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.conditionalView === 'accountPlants' && this.state.loggedIn === true &&\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<h4>Account Submission Dashboard</h4>\n\t\t\t\t\t\t<ShowUserPlants\n\t\t\t\t\t\t\taccountPlants={this.state.accountPlants}\n\t\t\t\t\t\t\tgetContributorPlants={this.getContributorPlants}\n\t\t\t\t\t\t\tdeletePlant={this.deletePlant} \n\t\t\t\t\t\t\teditPlant={this.editPlant} \n\t\t\t\t\t\t\tshowOnePlant={this.showOnePlant} \n\t\t\t\t\t\t\taccountFavPlants={this.state.accountFavPlants}\n\t\t\t\t\t\t\tloggedInUser={this.state.loggedInUser}/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.idOfPlantToEdit !== -1 && this.state.loggedIn === true &&\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<EditPlant\n\t\t\t\t\t\t\tkey={this.state.idOfPlantToEdit}\n\t\t\t\t\t\t\tplantToEdit={this.state.plants.find((plant) => plant.id === this.state.idOfPlantToEdit)}\n\t\t\t\t\t\t\tdeletePlant={this.deletePlant} \n\t\t\t\t\t\t\tupdatePlant={this.updatePlant} \n\t\t\t\t\t\t\tshowUserPlants={this.showUserPlants}/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.conditionalView === 'showThisPlant' && this.state.loggedIn === true &&\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<PlantToShow\n\t\t\t\t\t\t\tkey={this.state.idOfPlantToShow}\n\t\t\t\t\t\t\tplantToShow={this.state.plants.find((plant) => plant.id === this.state.idOfPlantToShow)}\n\t\t\t\t\t\t\tloggedIn={this.state.loggedIn}\n\t\t\t\t\t\t\tviewPlants={this.viewPlants}/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.conditionalView === 'favoritePlants' && this.state.loggedIn === true &&\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h4>Favorites</h4>\n\t\t\t\t\t\t<ShowFavPlants\n\t\t\t\t\t\t\taccountFavPlants={this.state.accountFavPlants}\n\t\t\t\t\t\t\tgetFavPlants={this.getFavPlants} \n\t\t\t\t\t\t\tshowOnePlant={this.showOnePlant}\n\t\t\t\t\t\t\tloggedInUser={this.state.loggedInUser} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\n\t\t\t\t}\n\n\n\t\t\t\t{\n\t\t\t\t\tthis.state.loggedIn === false &&\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 className=\"welcome\">We are a user-driven and collaborative interactive database of medicinal and poisonous plants and the various ways that humans use them. Sign up or log in to search our database or become a contributor!\n\t\t\t\t\t\t\t\t</h2>   \n\t\t\t    \t\t\t</div>\n\t\t\t\t\t\t\t<LoginContainer\n\t\t\t\t\t\t\t\tlogin={this.login}\n\t\t\t\t\t\t\t\tregister={this.register} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","/home/audrey/DEPAC/depac-front-end/src/index.js",[],"/home/audrey/DEPAC/depac-front-end/src/App.js",[],"/home/audrey/DEPAC/depac-front-end/src/PlantToShow/index.js",["59","60","61","62"],"/home/audrey/DEPAC/depac-front-end/src/ShowUserPlants/index.js",["63","64"],"/home/audrey/DEPAC/depac-front-end/src/ShowFavPlants/index.js",[],"/home/audrey/DEPAC/depac-front-end/src/EditPlant/index.js",[],"/home/audrey/DEPAC/depac-front-end/src/ShowAllPlants/index.js",[],"/home/audrey/DEPAC/depac-front-end/src/UserNavBar/index.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":9},{"ruleId":"76","severity":1,"message":"77","line":55,"column":65,"nodeType":"78","endLine":55,"endColumn":80},{"ruleId":"76","severity":1,"message":"77","line":56,"column":65,"nodeType":"78","endLine":56,"endColumn":80},{"ruleId":"76","severity":1,"message":"77","line":57,"column":65,"nodeType":"78","endLine":57,"endColumn":80},{"ruleId":"79","severity":1,"message":"80","line":69,"column":10,"nodeType":"81","endLine":72,"endColumn":54},{"ruleId":"71","severity":1,"message":"82","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":21,"column":15,"nodeType":"81","endLine":21,"endColumn":27},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"no-unused-vars","'SearchList' is defined but never used.","Identifier","unusedVar","'M' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]